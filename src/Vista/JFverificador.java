/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import ApiHuella.DataAdapterInterface;
import ApiHuella.FingerPrintDataAdapter;
import Business.BusinessCapturarHuellas;
import Model.HuellaEmpleado;
import com.digitalpersona.onetouch.DPFPGlobal;
import com.digitalpersona.onetouch.DPFPTemplate;
import com.digitalpersona.onetouch.capture.event.DPFPDataEvent;
import com.digitalpersona.onetouch.capture.event.DPFPErrorEvent;
import com.digitalpersona.onetouch.capture.event.DPFPReaderStatusEvent;
import com.digitalpersona.onetouch.capture.event.DPFPSensorEvent;
import comunes.ConexionDb;
import comunes.JFrameBase;
import java.util.List;

/**
 *
 * @author Administrador
 */
public class JFverificador extends JFrameBase implements DataAdapterInterface {
    
    private FingerPrintDataAdapter fingerPrintDataAdapter;
    
    BusinessCapturarHuellas businessCapturarHuellas;

    /**
     * Creates new form JFverificador
     */
    public JFverificador() {
        initComponents();
        setFrameCurrent(this);
        fingerPrintDataAdapter = new FingerPrintDataAdapter(this);
        ConexionDb con = ConexionDb.getConnectionDb();
        con.initConnection();
        businessCapturarHuellas = new BusinessCapturarHuellas();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFverificador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFverificador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFverificador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFverificador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFverificador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void dataAcquiredFinger(DPFPDataEvent e) {
        
        List<HuellaEmpleado> huellaEmpleados = businessCapturarHuellas.findAllHuellas();
        for (HuellaEmpleado huellaEmpleado : huellaEmpleados) {
            DPFPTemplate dPFPTemplate = DPFPGlobal.getTemplateFactory().createTemplate(huellaEmpleado.getHuella());
            fingerPrintDataAdapter.setTemplate(dPFPTemplate);
            if(fingerPrintDataAdapter.verificar())
            {
                System.out.println("encontrado");
                break;
            }
        }
        
    }
    
    @Override
    public void errorReaderFingerDevice(DPFPErrorEvent dPFPErrorEvent) {
        
    }
    
    @Override
    public void readerConnectedDevice(DPFPReaderStatusEvent e) {
        
    }
    
    @Override
    public void readerDisconnectDevice(DPFPReaderStatusEvent e) {
        
    }
    
    @Override
    public void fingerTouchedDevice(DPFPSensorEvent event) {
        
    }
    
    @Override
    public void fingerGoneDevice(DPFPSensorEvent event) {
        
    }
}
